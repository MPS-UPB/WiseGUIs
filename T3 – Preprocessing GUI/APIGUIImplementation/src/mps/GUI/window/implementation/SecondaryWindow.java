/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mps.GUI.window.implementation;

import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;

/**
 *
 * @author Liz
 */
public abstract class SecondaryWindow extends javax.swing.JFrame {

    protected DefaultListModel jListingModel = new DefaultListModel();
    protected DefaultListModel jChoicesModel = new DefaultListModel();
    protected JButton jAddButton;
    protected JButton jOKButton;
    protected JButton jCancelButton;
    protected JLabel jLabel1;
    protected JLabel jLabel2;
    protected JLabel jLabel3;
    protected JList jChoicesPanelList;
    protected JList jListingPanelList;
    protected JButton jRemoveButton;
    protected JScrollPane jScrollPane1;
    protected JScrollPane jScrollPane2;
    protected MainWindow mainWindow;
    protected ParametersWindow parametersWindow;
    protected ArrayList<Operation> operations;
    protected ArrayList<Operation> selectedExecs;

    /**
     * Creates new form SecondaryWindow
     */
    public SecondaryWindow(MainWindow window) {

        initComponents();

        this.mainWindow = window;
        operations = new ArrayList<Operation>();
        selectedExecs = new ArrayList<Operation>();

        jListingPanelList.setModel(jListingModel);
        jChoicesPanelList.setModel(jChoicesModel);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        jListingPanelList = new JList();
        jScrollPane2 = new JScrollPane();
        jChoicesPanelList = new JList();
        jAddButton = new JButton();
        jRemoveButton = new JButton();
        jOKButton = new JButton();
        jCancelButton = new JButton();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();

        //aici e cam dubios 

        //NU fac dispose la fereastra cand se inchide, ci fac clear la elementele din lista dreapta
        //tre' sa verific daca mi se deschide aceeasi fereastra la apasarea butonului preproc / binariz

        //    setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent arg0) {
                mainWindow.setEnabled(false);
            }

            @Override
            public void windowIconified(WindowEvent arg0) {
                // TODO Auto-generated method stub
            }

            @Override
            public void windowDeiconified(WindowEvent arg0) {
                // TODO Auto-generated method stub
            }

            @Override
            public void windowDeactivated(WindowEvent arg0) {
            }

            @Override
            public void windowClosing(WindowEvent arg0) {

                //daca se inchide direct fereastra, se face clear la lista din dreapta
                jChoicesModel.removeAllElements();
                mainWindow.setEnabled(true);
            }

            @Override
            public void windowClosed(WindowEvent arg0) {
            }

            @Override
            public void windowActivated(WindowEvent arg0) {
                //    mainWindow.setEnabled(false);
            }
        });



        jScrollPane1.setViewportView(jListingPanelList);
        jScrollPane2.setViewportView(jChoicesPanelList);

        jAddButton.setText("Add");
        jAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtonActionPerformed(evt);

            }
        });

        jRemoveButton.setText("Remove");
        jRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jRemoveButtonActionPerformed(evt);
            }
        });


        jOKButton.setText("OK");
        jOKButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SecondaryWindow.this.okClicked(evt);
            }
        });

        jCancelButton.setText("Cancel");
        jCancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SecondaryWindow.this.cancelClicked(evt);
            }
        });

        //       jLabel1.setText("Listing Panel");

        //       jLabel2.setText("Choices Panel");

        //      jLabel3.setText("Binarization Window");




        //???????????????????????
        //nu stiu sa adaug butoanele - dimensiuni, asezare in layout etc...




        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
                .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jAddButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRemoveButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE)
                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addComponent(jScrollPane2)))
                .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jAddButton)
                .addGap(64, 64, 64)
                .addComponent(jRemoveButton)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jLabel2))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    // End of variables declaration                   
    
    
    protected void closeWindow() {

        jChoicesModel.removeAllElements();
        //    this.setVisible(false);
        this.mainWindow.setEnabled(true);
    }

    public void addListElement(Operation elem) {

        jListingModel.addElement(elem.name);
        operations.add(elem);
    }
    
    public void addExec(Operation op) {
        
        selectedExecs.add(op);
    }

    protected abstract void okClicked(java.awt.event.MouseEvent evt); 

    protected void cancelClicked(java.awt.event.MouseEvent evt) {

        closeWindow();
    }

    protected abstract void jRemoveButtonActionPerformed(java.awt.event.ActionEvent evt);

    protected abstract void jAddButtonActionPerformed(java.awt.event.ActionEvent evt);
}
